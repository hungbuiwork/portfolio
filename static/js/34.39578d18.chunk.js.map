{"version":3,"file":"static/js/34.39578d18.chunk.js","mappings":"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","sources":["assets/thumbnails/sharpifyIcon.svg","components/ShowProjects.jsx","data/allproject_data.jsx","data/projectdata_all.jsx"],"sourcesContent":["var _mask, _path, _path2, _path3, _path4;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgSharpifyIcon(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 75,\n    height: 75,\n    viewBox: \"0 0 75 75\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _mask || (_mask = /*#__PURE__*/React.createElement(\"mask\", {\n    id: \"path-1-inside-1_555_6438\",\n    fill: \"white\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M50.5 57C50.5 52.5534 53.4167 50.0015 56.75 46.6616C60.9167 42.9041 63 37.4768 63 32.0494C63 25.4059 60.3661 19.0345 55.6777 14.3368C50.9893 9.63913 44.6304 7 38 7C31.3696 7 25.0107 9.63913 20.3223 14.3368C15.6339 19.0345 13 25.4059 13 32.0494C13 36.2243 13.8333 41.2342 19.25 46.6616C22.1667 49.584 25.5 53.0968 25.5 57\"\n  }))), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M45.5 57C45.5 59.7614 47.7386 62 50.5 62C53.2614 62 55.5 59.7614 55.5 57H45.5ZM56.75 46.6616L53.4015 42.9484C53.3364 43.0071 53.2729 43.0675 53.211 43.1295L56.75 46.6616ZM38 7V2V7ZM13 32.0494H8H13ZM19.25 46.6616L15.711 50.1936L15.711 50.1936L19.25 46.6616ZM20.5 57C20.5 59.7614 22.7386 62 25.5 62C28.2614 62 30.5 59.7614 30.5 57H20.5ZM55.5 57C55.5 55.0507 56.4363 54.0539 60.289 50.1936L53.211 43.1295C50.397 45.949 45.5 50.056 45.5 57H55.5ZM60.0985 50.3747C65.4451 45.5532 68 38.7095 68 32.0494H58C58 36.244 56.3882 40.2551 53.4015 42.9484L60.0985 50.3747ZM68 32.0494C68 24.083 64.8417 16.4409 59.2167 10.8048L52.1387 17.8688C55.8905 21.6281 58 26.7288 58 32.0494H68ZM59.2167 10.8048C53.5914 5.16831 45.9597 2 38 2V12C43.3011 12 48.3872 14.1099 52.1387 17.8688L59.2167 10.8048ZM38 2C30.0403 2 22.4086 5.16831 16.7833 10.8048L23.8614 17.8688C27.6128 14.1099 32.6989 12 38 12V2ZM16.7833 10.8048C11.1583 16.4409 8 24.083 8 32.0494L18 32.0494C18 26.7288 20.1095 21.6281 23.8614 17.8688L16.7833 10.8048ZM8 32.0494C8 37.2003 9.13847 43.6081 15.711 50.1936L22.789 43.1295C18.5282 38.8603 18 35.2483 18 32.0494H8ZM15.711 50.1936C17.1827 51.6683 18.4453 52.9902 19.357 54.3078C20.2717 55.63 20.5 56.483 20.5 57H30.5C30.5 53.6138 29.0616 50.7588 27.5805 48.6182C26.0963 46.473 24.2339 44.5773 22.789 43.1295L15.711 50.1936Z\",\n    fill: \"#193730\",\n    mask: \"url(#path-1-inside-1_555_6438)\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M26 62H50\",\n    stroke: \"#193730\",\n    strokeWidth: 4,\n    strokeLinecap: \"round\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M29 69H47\",\n    stroke: \"#193730\",\n    strokeWidth: 4,\n    strokeLinecap: \"round\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M48 27.9994C44.5047 18.4998 29.0333 21.8517 27.1891 30.5054C24.9085 41.2066 43.9975 35.8002 44.5047 42.7042C45.012 49.6081 38.5435 53.7329 35.5 54.5\",\n    stroke: \"#FF9500\",\n    strokeWidth: 6\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSharpifyIcon);\nexport default __webpack_public_path__ + \"static/media/sharpifyIcon.b6135b85add4a40259079951e0da43a7.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState } from \"react\";\r\nimport { Slide } from \"../animations/Slide.tsx\";\r\n\r\nimport allProjects from \"../data/projectdata_all.jsx\";\r\nconst Project = React.lazy(() => import(\"./Project\"));\r\n\r\nexport const ShowProjects = (props) => {\r\n  const numProjects = props?.amount || 4;\r\n  const [visibleProjects, setVisibleProjects] = useState(numProjects);\r\n  const projects = props.projects || [];\r\n\r\n  const loadMoreProjects = () => {\r\n    // Increase the number of visible projects by 4\r\n    setVisibleProjects(\r\n      (prevVisibleProjects) => prevVisibleProjects + numProjects\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        {projects.slice(0, visibleProjects).map((project) => (\r\n          <Slide x={200} y={0} key={project.title}>\r\n            <Project project={project} className={props.className}></Project>\r\n          </Slide>\r\n        ))}\r\n      </div>\r\n      {visibleProjects < projects.length && (\r\n        <div className=\"flex justify-center\">\r\n          <button\r\n            onClick={loadMoreProjects}\r\n            className=\"rounded-md text-xl px-4 py-4 mx-4  mb-8 text-center border-2  text-white font-semibold hover:bg-white hover:text-slate-900 md:duration-300 flex items-center\"\r\n          >\r\n            <span class=\"loading loading-bars loading-md\"></span>&nbsp;LOAD MORE\r\n            &nbsp; <span class=\"loading loading-bars loading-md\"></span>\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","const projects = {\r\n  procedurallyGeneratedTrees: {\r\n    vidURL: require(\"../assets/thumbnails/Proceduraltree.mp4\"),\r\n    roles: \"\",\r\n    data: \"May 2023\",\r\n    skills: [\"Unity\", \"C#\"],\r\n    desc: \"Customizable, procedurally generated trees generated from simple rules using Lindenburg Systems. Implemented from scratch in Unity and C#.\",\r\n    title: \"Procedural Tree Generator\",\r\n    details: [\r\n      {\r\n        title: \"Read the Dev Process\",\r\n        description:\r\n          \"I strongly recommend reading the Dev Process above! It goes into detail about my workflow throughout the project.\",\r\n      },\r\n      {\r\n        image: require(\"../assets/thumbnails/proceduraltree2.png\"),\r\n        title: \"Development\",\r\n        description:\r\n          'For a while, I have had a huge affinity for procedural generation. A lot of research went into understanding how L-systems work, which is a commonly used to strategy to visualize procedural plant development, fractals, etc. After researching, I implemented a developer-friendly L-System generator and L-System renderer which I hope to soon publish to the Asset Store. I go into much more detail in the \"Development Process\" pdf above!',\r\n      },\r\n      {\r\n        vid: require(\"../assets/thumbnails/Proceduraltreedemo.mp4\"),\r\n        title: \"What I learned\",\r\n        description:\r\n          \"I'm very proud of this projects because I was able to implement this without really looking at any tutorials or code; I purely built this off of research. I became much more familiar with Unity's tools and much more comfortable implementing C#. I refined my probem-solving skills by creating a solution for rendering foliage and animation. \",\r\n      },\r\n    ],\r\n    buttons: [\r\n      {\r\n        label: \"Dev Process\",\r\n        url: require(\"../assets/pdfs/ProceduralTrees.pdf\"),\r\n      },\r\n      {\r\n        label: \"Source Code\",\r\n        url: \"https://github.com/hungbuiwork/ProceduralTrees/blob/main/Assets/Scripts/LSystemRenderer.cs\",\r\n      },\r\n    ],\r\n  },\r\n\r\n  toonShader: {\r\n    vidURL: require(\"../assets/thumbnails/toonshader.mp4\"),\r\n    roles: \"\",\r\n    date: \"NOV 2022 - DEC 2022\",\r\n    skills: [\"Unity\", \"Shaderlab\", \"HSLS\"],\r\n    desc: \"A toon-shader I've been developing that allows customizability of (color, size, smoothness, intensity) of (shadows, specular light, rim light). This customizability allows the user to blend between realistic/cartoony aesthetics. I hope to use this shader in future projects!\",\r\n    title: \"Customizable Toon Shader\",\r\n    details: [\r\n      {\r\n        title: \"Read the Dev Process\",\r\n        description:\r\n          \"I strongly recommend reading the Dev Process above! It goes into detail about my workflow throughout the project.\",\r\n      },\r\n      {\r\n        image: require(\"../assets/thumbnails/toonShader_scene.jpeg\"),\r\n        title: \"Background\",\r\n        description:\r\n          \"The end of fall quarter 2023 is nearing, and the final for my Introduction to Computer Graphics is very open-ended -- we were asked to create something in any field of graphics! So, I decided for my project that I wanted to expand on what I learned about vertex and fragment shading! I have a love for cartoon styled graphics, and make games, so why not make a shader which does just that?\",\r\n      },\r\n      {\r\n        image: require(\"../assets/thumbnails/toonShader_house.jpeg\"),\r\n        title: \"Development\",\r\n        description:\r\n          'I implemented diffuse shading, specular light, rim light, outlines, and shadowmapping. I took a very iterative approach, sitting down and taking time to REALLY understand the techniques behind how these affects are attained. I go into much more detail in the \"Development Process\" pdf above!',\r\n      },\r\n      {\r\n        title: \"What I learned\",\r\n        description:\r\n          \"I now have a much better understanding of vertice shaders, fragment shaders, the linear algebra behind shading techniques, how colors blend, world-space vs screen-space and more. \",\r\n      },\r\n    ],\r\n    buttons: [\r\n      { label: \"Dev Process\", url: require(\"../assets/pdfs/Toon_Shader.pdf\") },\r\n      {\r\n        label: \"Source Code\",\r\n        url: \"https://github.com/hungbuiwork/Toon-Shader/blob/main/Assets/ToonShader%20Materials/HBToon.shader\",\r\n      },\r\n    ],\r\n  },\r\n\r\n  musicalMadness: {\r\n    vidURL: require(\"../assets/thumbnails/musicalmadness.m4v\"),\r\n    date: \"MARCH 2022 - APRIL 2022\",\r\n    roles: \"Project Lead, Programmer, 2D Art\",\r\n    size: 6,\r\n    skills: [\"Unity\", \"C#\"],\r\n    desc: \"A music-themed top-down shooter/dungeon exploration video game that I created with UCI's Video Game Development Club. For this project, I developed the procedurally generated dungeon and enemy AI scripts with a focus on maintainability, modularity, and reusability. I played a pivotal role bridging the gap between programming, art, and sound to ensure the creation of an enjoyable, visually appealing, and cohesive gaming experience!\",\r\n    title: \"Musical Madness\",\r\n    details: [\r\n      {\r\n        vid: require(\"../assets/thumbnails/musicalmadness2.mp4\"),\r\n        description:\r\n          \"After being part of several videogame projects in the past, I figured that I developed enough skills and understanding of the game development workflow. So, at the beginning of the spring quarter of 2022, my roommate and I ventured on a journey to pitch our own game to the Video Game Development Club. Inspired by other dungeon crawlers such as Binding of Isaac, I wanted the game to be thrilling, aesthetic, and to keep the gameplay fun and interesting! Also, I wanted to explore procedural generation, which has always intrigued me. So, I along with my roommate took on the challenge of leading the production of Musical Madness!\",\r\n        title: \"Background\",\r\n      },\r\n      {\r\n        image: require(\"../assets/thumbnails/musicalMadness_map.jpeg\"),\r\n        description:\r\n          \"This project focused on creating efficient, well-structured code. After completing relevant courses on software design and algorithms, we applied our knowledge. When designing our procedural generation system, my roommate and I took a careful, iterative approach. We used diagrams, pseudocode, and troubleshooting to understand and address bugs. Later, we improved our dungeon-building algorithm's memory efficiency by using bitwise operations extensively.\",\r\n        title: \"Procedural Generation, Enemy AI, and Script Architecture\",\r\n      },\r\n      {\r\n        image: require(\"../assets/thumbnails/musicalMadness_architecture.jpeg\"),\r\n        description:\r\n          \"When it came to designing the overall script architecture, we decided to streamline the implementation of both players and enemies by sharing certain scripts, such as those responsible for managing statistics, combat mechanics, and weapons. The key distinction between them lay in their input methods (keyboard for players, AI for enemies) and their movement patterns. This approach enabled us to maintain a modular codebase and efficiently reuse various components. An exciting benefit of this design was that any entity could seamlessly utilize newly created weapons. This flexibility proved invaluable when implementing the boss character, as it simply inherited behaviors from other enemy types and employed the same arsenal. Furthermore, I implemented optimizations to enhance performance by limiting enemy spawning and updates to the current room or adjacent ones. This optimization significantly improved our game's performance. As the sole developer responsible for the enemy AI, I devised a system that utilized scriptable objects known as 'enemy brains.' These objects comprised a set of predefined values, which in turn generated diverse behaviors. This approach not only reduced the amount of code required but also facilitated the rapid creation of enemies with distinct behaviors. For instance, it allowed us to easily differentiate the strafing behavior of violin enemies from the charging and rolling tactics of drum enemies.\",\r\n      },\r\n      {\r\n        description:\r\n          \"Leading the project proved to be challenging. I facilitated meetings where we discussed design, game-feel, assigned tasks, and reported progress. I took extra time outside of normal meetings to meet up with the sound team to help tackle challenges!  Ultimately, we developed a game that was enjoyable, cohesive, and full of fun chaos.\",\r\n        title: \"Leading the Project\",\r\n      },\r\n      {\r\n        description:\r\n          \"I learned so much working on this project, even if it wasn't for the longest time. In terms of leadership, I think I could have improved by having much more efficient meetings, and being more realistic with the scope of the game. Furthermore, I learned a lot about good code design, creating UML diagrams to communicate to other programmers, much more about C#, Unity's scriptable objects, and more. I am so proud of what we created.\",\r\n        title: \"What I learned\",\r\n      },\r\n    ],\r\n    buttons: [\r\n      { label: \"Play\", url: \"https://hungbui.itch.io/musicalmadness\" },\r\n      {\r\n        label: \"Source Code\",\r\n        url: \"https://github.com/hungbuiwork/MusicalMadness\",\r\n      },\r\n    ],\r\n  },\r\n\r\n  phantomHallowsEve: {\r\n    roles: \"2D & Technical Artist\",\r\n    date: \"SEP 2022\",\r\n    skills: [\"Unity\", \"C#\", \"Asesprite\"],\r\n    desc: \"A cozy and spooky puzzle game! For the 2022 Cozy Autumn 2-week Game Jam, I collaborated with a team of 8, creating 2D sprite art, lighting, postprocessing effects, and 2D VFX in Unity.\",\r\n    title: \"Phantom Hallow's Eve\",\r\n    buttons: [\r\n      { label: \"Play\", url: \"https://supriseorb.itch.io/phantom-hallows-eve\" },\r\n      {\r\n        label: \"Source Code\",\r\n        url: \"https://github.com/hungbuiwork/Cozy-Autumn-Game-Jam-2022\",\r\n      },\r\n    ],\r\n  },\r\n\r\n  patientZero: {\r\n    size: 19,\r\n    date: \"SEP 2021 - APRIL 2022\",\r\n    roles: \"Programmer, VFX\",\r\n    skills: [\"Unity\", \"C#\"],\r\n    desc: 'As a Game Programmer for \"Patient Zero,\" an accredited VR bio-educational puzzle game, I collaborate with a skilled team of programmers, artists, writers, and game designers. Our aim is to offer players a captivating sci-fi experience while teaching epidemiology principles. My tasks include fixing UI bugs and implementing essential elements like tooltips and pause menus to enhance the player\\'s experience.',\r\n    title: \"Game UI Programmer\",\r\n    company: \"Hughes Media & Design Lab\",\r\n\r\n    details: [\r\n      {\r\n        image: require(\"../assets/thumbnails/patientzero.jpeg\"),\r\n        title: \"Background\",\r\n        description:\r\n          \"It was the fall quarter of 2021, my second year at UCI. I saw that Hughes Media & Design Lab was working on a VR research-based project which simulated a lab in which the player must find out what the disease is. After an interview, I was lucky enough to be able to join the team!\",\r\n      },\r\n      {\r\n        title: \"What I implemented\",\r\n        vid: require(\"../assets/thumbnails/patientZero_tooltip.mp4\"),\r\n        description: (\r\n          <div className=\" flex flex-col gap-8\">\r\n            <p>\r\n              A tooltip/hints 3D UI that pops up when the user picks up a tool.\r\n              I tried to match the design with the aesthetics of the game. A\r\n              small optimization I did was to reuse the same object, and simply\r\n              hide it somewhere off the map when not in use.\"\r\n            </p>\r\n            <p>\r\n              I also implemented the game's post-processing to make the world\r\n              feel more atmospheric and moody. This was especially important as\r\n              the game is in VR.\r\n            </p>\r\n            <p>\r\n              A pause menu 3D UI that pops up when the pause button is pressed.\r\n            </p>\r\n          </div>\r\n        ),\r\n      },\r\n      {\r\n        title: \"Challenges/Takeaways\",\r\n        description:\r\n          \"With my knowledge of C# at the time, I found working on this project quite challenging. It was a continuation of a project that had been in development for quite some time, and the existing codebase was sometimes hard to work with, as there seemed to be not much thought behind the architecture of the scripts. So, I focused mainly on implementing new UI features, and doing minor bug fixes. Though the codebase was difficult to work with, I took notes of how this could be improved, and in the spring of 2022 created Musical Madness, with an emphasis on good code documentation, task communication, and code architecture!\",\r\n      },\r\n    ],\r\n    buttons: [\r\n      { label: \"Hughes Lab & Media\", url: \"https://hughesmedia.bio.uci.edu\" },\r\n      { label: \"The Game\", url: \"https://amily.itch.io/patient-zero\" },\r\n    ],\r\n  },\r\n\r\n  jokeBrowser: {\r\n    imgURL: require(\"../assets/thumbnails/JokeBrowser.gif\"),\r\n    roles: \"\",\r\n    date: \"NOV 2022\",\r\n    skills: [\"AngularJS\", \"Javascript\"],\r\n    desc: \"A joke browser I created that displays funny program jokes from JokeAPI, exploring an alternative form of interaction using HandTrackjs. Simply using your camera and hands, you can control the generation, viewing, and favoriting of jokes! Check it out!\",\r\n    title: \"Joke Browser & Alternative Interaction\",\r\n    details: [\r\n      {\r\n        image: require(\"../assets/thumbnails/jokeBrowser_ui.jpeg\"),\r\n        title: \"A bit more\",\r\n        description:\r\n          'This project marked one of my final assignments in the User Interaction course. It was a highly flexible task, so I decided to develop a web application for browsing jokes. I designed this app using Angular, incorporating a service to fetch jokes from JokeAPI and integrating HandTrackJS for an interactive experience. Users could simply relax, activate their camera, and explore programming jokes. My primary goal was to craft an aesthetically pleasing and user-friendly interface, along with intuitive hand controls. Although the web app is more suitable for non-mobile browsers, you can still give it a try by clicking the \"Demo\" button above!',\r\n      },\r\n    ],\r\n    buttons: [\r\n      {\r\n        label: \"Source Code\",\r\n        url: \"https://github.com/hungbuiwork/JokeWebApp/blob/main/README.md\",\r\n      },\r\n      {\r\n        label: \"Demo\",\r\n        url: \"https://hungbuiwork.github.io/JokeWebApp/\",\r\n      },\r\n    ],\r\n  },\r\n\r\n  zotDev: {\r\n    imgURL: require(\"../assets/thumbnails/zotdev_thumbnail.png\"),\r\n    roles: \"Gameplay Programmer & UI Programmer\",\r\n    date: \"MAR 2023 - JUN 2023\",\r\n    skills: [\"Unity\", \"C#\"],\r\n    desc: \"Arriving as a freshman college student, you are excited to start the program of your dreams entering the Game Development Major and the Video Game Development Club.\",\r\n    title: \"Zot Dev\",\r\n    details: [\r\n      {\r\n        image: require(\"../assets/thumbnails/zotdev_sleep.png\"),\r\n        title: \"To Do\",\r\n        description: \"in progress...\",\r\n      },\r\n    ],\r\n    buttons: [\r\n      {\r\n        label: \"Source Code\",\r\n        url: \"https://github.com/Dg155/UCIGameDevTycoon\",\r\n      },\r\n      {\r\n        label: \"Play\",\r\n        url: \"https://dg155.itch.io/zot-dev\",\r\n      },\r\n    ],\r\n  },\r\n\r\n  thisWebsite: {\r\n    vidURL: require(\"../assets/thumbnails/website-art.mp4\"),\r\n    roles: \"\",\r\n    date: \"DEC 2022\",\r\n    skills: [\"React\", \"TailwindCSS\", \"Javascript\"],\r\n    desc: \"A portfolio website, where I showcase my projects, and art! Developed by myself from scratch over winter break. I learned a lot about react, and responsive design!\",\r\n    title: \"This Website !\",\r\n    details: [\r\n      {\r\n        image: require(\"../assets/thumbnails/website.gif\"),\r\n        title: \"Why am I doing this?\",\r\n        description:\r\n          \"I am programming this from scratch. No templates -- just the ReactJS framework, the TailwindCSS framework, and my two hands. I had some extra time this winter break so I decided to redo my portfolio again. My first portfolio was on Adobe Portfolio. My second was plain HTML, and CSS. Though the customizability of plain HTML and CSS was nice, adding new stuff was just repetitive, ugly, and became increasingly harder to read. I wanted to create components that I could customize, and reuse.\",\r\n      },\r\n      {\r\n        title: \"What I am learning\",\r\n        description:\r\n          \"This is currently a work in progress, but I'm learning a lot of things as I work through this. This is my first project using the React framework and Tailwind. I am experimenting a lot with how I want my website to be laid out, and how to implement responsiveness that looks nice on several different devices. So far, I really like react, and love how fast I can iterate with Tailwind(though, I do plan to clean the CSS up in the future)...\",\r\n      },\r\n    ],\r\n    buttons: [\r\n      {\r\n        label: \"Source Code\",\r\n        url: \"https://github.com/hungbuiwork/portfolio\",\r\n      },\r\n    ],\r\n  },\r\n\r\n  capstoneArchive: {\r\n    date: \"SEP 2023 - JAN 2024\",\r\n    skills: [\"ReactJS\", \"TailwindCSS\", \"Typescript\", \"Jira\"],\r\n    roles: [\"Scrum Master\", \"Full-Stack Developer\"],\r\n    size: 5,\r\n    title: \"UCI Capstone Archive v1\",\r\n    desc: \"New archival system for UCI Capstone Projects built from scratch, with upload, display, and search features, geared towards attracting to UCI's Capstone program.  UCI faculty assigned us this project and is to be worked on by future students to implement into the official UCI website.\",\r\n    vidURL: require(\"../assets/thumbnails/capstoneArchive.mp4\"),\r\n    company: \"UCI Informatics Dpt.\",\r\n    details: [\r\n      {\r\n        title: \"Backlog Creation & Planning\",\r\n        description:\r\n          \"Starting the project from scratch involved having in-depth discussions with stakeholders to grasp their expectations. I took the lead in discussions with faculty members, noting down their requirements and preferences. Before each meeting, I prepared a set of relevant questions, covering use cases, user stories, and trade-offs between project thoroughness and ease of use. These discussions were then compiled into a comprehensive requirements document, serving as a practical guide for implementation.\",\r\n      },\r\n      {\r\n        title: \"Use cases\",\r\n        description:\r\n          \"Adopting a software engineering mindset involved placing myself in the shoes of potential users. Deliberations revolved around crucial decisions, such as prioritizing the display of company name or project image. Understanding the needs of industry partners, faculty members,  and students, I delved into questions regarding the amount of information preferred in each project. This perspective played a pivotal role in shaping the user-centric aspects of the project.\",\r\n      },\r\n      {\r\n        title: \"Project Leading\",\r\n        description:\r\n          \"Navigating the challenges of project leadership provided invaluable learning experiences. Assessing evolving requirements, organizing them into a backlog, and strategically assigning tasks based on skills and availability were crucial responsibilities. Extensive planning was employed to mitigate merge conflicts and task overlap, emphasizing the importance of robust communication. Despite the complexities, the team successfully implemented numerous features within a single quarter.\",\r\n      },\r\n      {\r\n        title: \"Implementation\",\r\n        description:\r\n          \"Contributing to the project's development, I personally implemented key features such as the responsive project search page, project component, routing, individual project page, upload form CSS, and the suggested projects tab for searching adjacent projects. Breaking down the front-end and back-end into organized components facilitated a cohesive and efficient coding process.\",\r\n      },\r\n      {\r\n        title: \"Learning Points\",\r\n        description:\r\n          \"Overall, I found it important to learn various aspects. Regarding the agile process, I found it important to plan early, ask a lot of clarifying questions, assess your team's skills, and approximate the time of tasks. Concerning the software design process, I found it important to make use of user stories, plan out the structure of the code before implementing, and talk to multiple stakeholders, as some had differing opinions. In terms of implementation, I found it important to break code down into components and document what you write.\",\r\n      },\r\n    ],\r\n    buttons: [\r\n      {\r\n        label: \"Live Demo\",\r\n        url: \"https://hungbuiwork.github.io/capstone-archive/\",\r\n      },\r\n      {\r\n        label: \"Requirements Document\",\r\n        url: \"https://docs.google.com/document/d/10vIFHweKmLg4ncYmA97udMbRj0zmnqgtXvflhPrLlLE/edit?usp=sharing\",\r\n      },\r\n    ],\r\n  },\r\n\r\n  wartorn: {\r\n    date: \"SEP 2023 - MAR 2024\",\r\n    skills: [\"Unreal\", \"VFX\", \"Agile\"],\r\n    vidURL: require(\"../assets/thumbnails/WartornShader.mp4\"),\r\n    roles: [\"Art Lead, Lighting, Postprocess, Shader Artist\"],\r\n    title: \"Wartorn\",\r\n    size: 19,\r\n    desc: \"A 3D narrative game where players take on the role of a young girl navigating the aftermath of a war attack. Through the use of lighting, visual effects, and dialogue, our game tells a story that explores themes of early maturing.\",\r\n    details: [\r\n      {\r\n        title: \"Material Shaders\",\r\n        vid: require(\"../assets/thumbnails/WartornShader.mp4\"),\r\n        description:\r\n          \"I created, in Unreal's Material's Editor, a custom material shader that blends toon-shading with the default texture, with parameters to adjust over blending, shadow and highlight color, as well as some degree of atmospheric fog. These gave me a lot of control over the color scheme and atmosphere created in each level. By adjusting these levels, I was able to start with a more colorful, warm, cheerful aesthetic that became darker, and more realistic as time continue -- reflecting the game theme of early maturation and perception.\",\r\n      },\r\n      {\r\n        description:\r\n          \"I also created a fog shader, with parameters to adjust strength, color, which combined with noise, was able to achieve some movement that felt natural and realistic. I used the fog shader in vastly different ways -- to conceal forbidden areas/out-of-bounds, to fake god rays and dust, and to convey air pollution post-attack.\",\r\n        image: require(\"../assets/thumbnails/WartornShader2.png\"),\r\n      },\r\n      {\r\n        description:\r\n          \"With a mix of my shaders, and tweaking Unreal's built-in postprocessing pipeline, I adjusted levels and lighting to convey the feeling that the MC was supposed to feel. I utilized the contrast between cool/warm colors to convey safety and danger, darkness to convey loneliness, and saturation to convey homeliness. \",\r\n        title: \"Postprocessing\",\r\n        image: require(\"../assets/thumbnails/Wartorn1.png\"),\r\n      },\r\n      {\r\n        title: \"Leading the art team\",\r\n        image: require(\"../assets/thumbnails/WartornLead.png\"),\r\n        description:\r\n          \"Apart from my contributions directly into the game, I led a 4-person art department, utilizing Jira and google spreadsheets to assign and track progress of each for each sprint (we used an Agile approach). I acted as a quality check to all the art imported. One thing I learned leading a department, is that establishing a consistent and concise workflow makes work so much more efficient, so I established a document with the producer during the second half of production that streamlined everyone's workflow. Proud of the outcome!\",\r\n      },\r\n    ],\r\n    buttons: [\r\n      {\r\n        label: \"Itch.io Page\",\r\n        url: \"https://dnajerab.itch.io/wartorn\",\r\n      },\r\n    ],\r\n  },\r\n\r\n  Partyify: {\r\n    data: \"APRIL 2024\",\r\n    skills: [\"React\", \"TailwindCSS\", \"SpotifyAPI\"],\r\n    title: \"Party-ify (Spotify App)\",\r\n    desc: \"Used at parties and gatherings, Partyify allows people to queue music to the party's playlist with just the scan of a QRCode. Only the host needs a spotify account.\",\r\n    vidURL: require(\"../assets/thumbnails/Partyify1.mp4\"),\r\n    buttons: [\r\n      {\r\n        label: \"Try it out\",\r\n        url: \"https://hungbuiwork.github.io/PartySpotify/\",\r\n      },\r\n    ],\r\n    details: [\r\n      {\r\n        title: \"Why make this?\",\r\n        description:\r\n          \"I noticed at parties and gatherings in Uni, that usually one person has control of the entire playlist. This is because Spotify's implementation of shared song sessions has many limitations: each user needs a spotify account, and the number of users in the sessions stays limited, and setup takes time, and rejoining/leaving a session is tedious\",\r\n      },\r\n      {},\r\n      {\r\n        title: \"Learning the SpotifyAPI\",\r\n        description:\r\n          \"I spent time going through the Spotify API documentation, reading and learning about how it works. I implemented Spotify OAuth to make sure everything was secure and users could interact smoothly. With React.js, I set up the routing so users could go directly to their Spotify accounts using specific URLs, and turned those URLs into QR codes using a library. Using the info passed through the URL routing, I made fetch calls to the Spotify API accordingly to implement queuing, searching, playing, seeking, and skipping to next/previous songs.\",\r\n      },\r\n      {\r\n        title: \"Designing UI\",\r\n        description:\r\n          \"I created a user interface that's sleek and adaptable, catering to both large screens like TVs and smaller mobile displays, perfect for in-car use. Each page is crafted with simplicity in mind, featuring intuitive controls and a clear visual hierarchy for easy navigation. By blending modern design elements, I achieved a fresh look while staying true to Spotify's recognizable color palette and branding.\",\r\n      },\r\n      {\r\n        title: \"Testing, Improving\",\r\n        description:\r\n          \"Right now, I'm trying out the app with friends and at parties, getting their thoughts and feedback. They're helping me see what works and what needs tweaking, like how well the recommendation system is doing. So far, the app has been very useful, and I plan to make iterative improvements as time goes on!\",\r\n      },\r\n    ],\r\n  },\r\n\r\n  whatCares: {\r\n    date: \"JULY 2023 - AUG 2024\",\r\n    skills: [\"ReactJS\", \"TailwindCSS\"],\r\n    desc: \"I am currently developing an informative website for WhatCares, which stands for World Health Access Team, a nonprofit organization comprising medical professionals actively conducting medical missions worldwide. The primary focus of this ongoing project is to create a website specifically tailored to engage potential donors and supporters. The site is not deployed as of yet, but soon check again soon!\",\r\n    title: \"Freelance Website Developer\",\r\n    company: \"WHAT Cares\",\r\n  },\r\n  gdim: {\r\n    date: \"FEB 2023 - JUN 2023\",\r\n    skills: [\"HTML\", \"CSS\", \"Figma\"],\r\n    desc: \"In my role as a Website Design Intern for UCI's Game Development & Interactive Media program, I collaborate closely with esteemed faculty members -- tasked with crafting user-friendly informational user interfaces and developing websites tailored to convey class-related information and a website to showcase student-made games.\",\r\n    title: \"Website Design Intern\",\r\n    company: \"UCI Game Design & Interactive Media\",\r\n    details: [\r\n      {\r\n        image: require(\"../assets/thumbnails/GDC-Flyer.png\"),\r\n        title: \"\",\r\n        description:\r\n          \"In my work, I collaborate with faculty to discuss tasks and projects, incorporating design feedback and iterating on designs as needed. For instance, I created a flyer in Figma for the Game Developer's Conference 2023 to boost awareness of the GDIM (Game Development & Interactive Media) major. I also create HTML and CSS syllabus websites when needed\",\r\n      },\r\n    ],\r\n  },\r\n  sharpify: {\r\n    imgURL: require(\"../assets/thumbnails/sharpifyIcon.svg\").default,\r\n    date: \"AUG 2024 - PRESENT\",\r\n    skills: [\"ReactJS\", \"Python\", \"FastAPI\", \"PostgreSQL\", \"TailwindCSS\"],\r\n    desc: \"Sharpify is a financial tech startup, which provides a secure platform for users to make predictions on stocks and cryptos, which are then validated, scored by accuracy, and ranked. I developed and implemented multiple core backend and frontend features, working closely with the CEO and a small team of engineers to create a secure, reliable, and user-friendly platform.\",\r\n    title: \"Full Stack Engineer Intern\",\r\n    company: \"SharpifyAI\",\r\n    buttons: [\r\n      {\r\n        label: \"Sharpify.AI\",\r\n        url: \"https://sharpify.ai/\",\r\n      },\r\n    ],\r\n    details: [\r\n      {\r\n        title: \"Responsibilities [More info soon ...] \",\r\n      },\r\n      {\r\n        title: \"Implementing a sophisticated ranking algorithm\",\r\n        detail: \"\",\r\n      },\r\n      {\r\n        title: \"Creating a compelling landing page\",\r\n        detail: \"\",\r\n      },\r\n      {\r\n        title: \"Jira, Agile, Pitching ideas\",\r\n        detail: \"\",\r\n      },\r\n      {\r\n        title: \"QA Testing and resolving bugs\",\r\n        detail: \"\",\r\n      },\r\n    ],\r\n  },\r\n};\r\n\r\nexport default projects;\r\n","import projects from \"./allproject_data\";\r\n\r\nexport const allProjects = [\r\n  projects.Partyify,\r\n  projects.wartorn,\r\n  projects.procedurallyGeneratedTrees,\r\n  projects.capstoneArchive,\r\n  projects.musicalMadness,\r\n  projects.toonShader,\r\n  projects.jokeBrowser,\r\n  projects.zotDev,\r\n  projects.thisWebsite,\r\n];\r\n\r\nexport const softProjects = [\r\n  projects.Partyify,\r\n  projects.capstoneArchive,\r\n  projects.musicalMadness,\r\n  projects.procedurallyGeneratedTrees,\r\n  projects.jokeBrowser,\r\n  projects.toonShader,\r\n  projects.wartorn,\r\n];\r\n\r\nexport const gameProjects = [\r\n  projects.wartorn,\r\n  projects.musicalMadness,\r\n  projects.procedurallyGeneratedTrees,\r\n  projects.toonShader,\r\n  projects.zotDev,\r\n  projects.Partyify,\r\n  projects.capstoneArchive,\r\n  projects.jokeBrowser,\r\n];\r\n"],"names":["Project","React","ShowProjects","props","numProjects","amount","useState","visibleProjects","setVisibleProjects","projects","slice","map","project","x","y","className","title","length","onClick","prevVisibleProjects","class","procedurallyGeneratedTrees","vidURL","require","roles","data","skills","desc","details","description","image","vid","buttons","label","url","toonShader","date","musicalMadness","size","phantomHallowsEve","patientZero","company","jokeBrowser","imgURL","zotDev","thisWebsite","capstoneArchive","wartorn","Partyify","whatCares","gdim","sharpify","detail","allProjects","softProjects","gameProjects"],"sourceRoot":""}